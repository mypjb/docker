---
apiVersion: v1
kind: Service
metadata:
  name: tensorflow-cluster
  namespace: development
spec:
  ports:
    - port: 5000 
      name: http
  clusterIP: None
  selector:
    app: tensorflow-cluster

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tensorflow-cluster
  namespace: development
data:
  start.sh: |
    #!/bin/bash
    pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
    pip install opencv-python protobuf==3.9.0 tf-models-official==2.9.*

    profile_path="/etc/profile.d/tf_cluster.sh"
    pod_name="${POD_NAME}"
    pod_port=5000
    worker=""
    worker_index=0

    for ((i=0; i<${POD_NUM}; i ++))
    do
       if [ "${i}" != "0" ]; then
          worker="${worker},"
       fi
    
       cur_name="${pod_name}${i}"
    
       if [ "${cur_name}" == "`hostname`" ]; then
          worker_index=$i
       fi
    
       worker="${worker}\"${cur_name}.tensorflow-cluster:${pod_port}\""
    done
   
    tf_config="{\"cluster\":{\"worker\":[${worker}]},\"task\":{\"type\":\"worker\",\"index\":${worker_index}}}"

    echo "export TF_CONFIG='${tf_config}'" > $profile_path
    #echo $tf_config > /root/tf_config.json

    source $profile_path
    
    python /conf/cluster_service.py

    #tail -f /etc/hosts 

  cluster_service.py: |
    #!/bin/python
    import json
    import os
    import tensorflow as tf
    
    #file = open('/root/tf_config.json',mode='r')
    #json_str = f.read()

    #print(json_str)

    #os.environ["TF_CONFIG"] = json_str

    cluster_resolver = tf.distribute.cluster_resolver.TFConfigClusterResolver()
   
    server = tf.distribute.Server(cluster_resolver.cluster_spec(),cluster_resolver.task_type,cluster_resolver.task_id)
    server.join()
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: tensorflow-cluster
  name: tensorflow-cluster
  namespace: development
spec:
  serviceName: "tensorflow-cluster"
  replicas: 3
  selector:
    matchLabels:
      app: tensorflow-cluster
  template:
    metadata:
      labels:
        app: tensorflow-cluster
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
        - name: tensorflow-cluster
          image: tensorflow/tensorflow:2.9.1
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash","/conf/start.sh"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              value: "tensorflow-cluster-"
            - name: POD_NUM
              value: "3"
              #valueFrom:
              #  fieldRef:
              #    fieldPath: spec.replicas
          resources:
          volumeMounts:
            - mountPath: /data
              name: tf-cluster
              subPath: tensorflow/tf/data
            - mountPath: /usr/local/lib/python3.8/dist-packages
              name: tf-cluster
              subPath: tensorflow/tf/packages
            - mountPath: /conf
              name: conf
      volumes:
        - name: conf
          configMap:
            name: tensorflow-cluster
            defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: tf-cluster
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "rook-ceph-block"
      resources:
        requests:
          storage: 20Gi
---
